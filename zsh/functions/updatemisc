echo "updating misc packages"

# This needs to have some case statements
# in it to ensure that these things exist

echo "\033[1;31mUpdate Prelude\e[0m"

if [ -d $HOME/.emacs.d ] && [ -d $HOME/.emacs.d/.git ]; then
    git -C $HOME/.emacs.d checkout master
    git -C $HOME/.emacs.d pull
else
  curl -L https://git.io/epre | sh
fi

echo "\033[1;31mUpdate NVM\e[0m"

if [ -d $HOME/.nvm ] && [ -d $HOME/.nvm/.git ]; then
    git -C $HOME/.nvm fetch --tags
    TAG=$(git -C $HOME/.nvm describe --tags `git -C $HOME/.nvm rev-list --tags --max-count=1`)
    echo "Checking out tag $TAG..."
    git -C $HOME/.nvm checkout "$TAG"
    source $HOME/.nvm/nvm.sh
else
  curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.25.4/install.sh | bash
fi


if [ -d $HOME/.zprezto ] && [ -d $HOME/.zprezto/.git ]; then
    echo "\033[1;31mUpdate Prezto\e[0m"
    git -C $HOME/.zprezto pull && git -C $HOME/.zprezto submodule update --init --recursive
fi

if type rbenv | grep -i function > /dev/null; then
    echo "\033[1;31mUpdate rbenv\e[0m"
    rbenv update
fi

if type pyenv | grep -i function > /dev/null; then
    echo "\033[1;31mUpdate pyenv\e[0m"
    pyenv update
fi

if [ $(which brew) ]; then
    if [[ `uname` == 'Darwin' ]]; then
        echo "\033[1;31mUpdate homebrew\e[0m"
    else
        echo "\033[1;31mUpdate linuxbrew\e[0m"
    fi


    brew update
    brew upgrade
    brew cleanup
    brew cask cleanup || true
fi

if [ $(which atom) ]; then
    echo "\033[1;31mUpdate Atom packages\e[0m"
    apm update -c false
    apm upgrade -c false
fi
